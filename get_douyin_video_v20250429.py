import json
import os
import sys
import time
import re

import requests
from bs4 import BeautifulSoup
from tqdm import tqdm

cookie = 'UIFID_TEMP=fd93a02f3f52f94d15e514b5060909b7718dbdccf5e652d020e98a2368c5c67f810f07357527eca74251436c7bbd45dadc419b74ba72f2410028551747254c28beac283f6c94a45aa18762985296f96ca18b53ee5c0763f41353ece235719d15def52c982d48b3b7eff5d0fd7dc38d1f; s_v_web_id=verify_m7zy4u9i_oWSZj7ng_yVit_47ya_8lrr_K7gFDOQFk9Ap; hevc_supported=true; fpk1=U2FsdGVkX19TetHnmtbyggSi5YwayBG1oUzia8Hg/tLEZ7wFQIRXOxBahmzLkPbD0Jn5HaC9VChFIXOeMI+0/A==; fpk2=6dbb10952a38c11d19e2648023d5055b; xgplayer_user_id=45193687326; passport_csrf_token=dc16d46d06e87a2b27d7962fd916e6b1; passport_csrf_token_default=dc16d46d06e87a2b27d7962fd916e6b1; __security_mc_1_s_sdk_crypt_sdk=098f464c-4fb8-b154; bd_ticket_guard_client_web_domain=2; passport_assist_user=CkGtuyX-YeelA0HE0uJaHPIPyMW8NJwqmf5Iv0Klh0xKGaT3etQrEeUbybXdadLPX5cZBdc3ZBMuUtsSSQ5GlE3ODRpKCjw1zguTJsEGEo-oaMNQZHHRHHAMRtGq6G7Mu5QfSM1bW6BCtCmF0HmOMEX8CyIgMBq17OAElPZuWRVCXnIQ3LnrDRiJr9ZUIAEiAQPL_ro6; n_mh=m92zUSO8jKZggTtDL6ESeclh7xW6f_pqT-PbCk4a4BQ; uid_tt=62709c12cc54edb307728f6b2b6be2f5; uid_tt_ss=62709c12cc54edb307728f6b2b6be2f5; sid_tt=9ad9fd177cc0a4d06b4453efb9b5fa38; sessionid=9ad9fd177cc0a4d06b4453efb9b5fa38; sessionid_ss=9ad9fd177cc0a4d06b4453efb9b5fa38; is_staff_user=false; store-region=cn-ah; store-region-src=uid; login_time=1741422755922; _bd_ticket_crypt_cookie=c04e88f805b3ee78418d362f30c239d0; __security_mc_1_s_sdk_sign_data_key_web_protect=1b43aed4-458a-b1d9; __security_mc_1_s_sdk_cert_key=340d339d-490f-ad5e; __security_server_data_status=1; SelfTabRedDotControl=%5B%5D; UIFID=fd93a02f3f52f94d15e514b5060909b7718dbdccf5e652d020e98a2368c5c67f810f07357527eca74251436c7bbd45dadc419b74ba72f2410028551747254c284ae571aac5dcb892e94d2e93a96ddaf38eddc7082d9fabab70bc3123fb691fb18dfffe58a56e0593167e83c4f527851d6dc1a21fbd162ec494e484576f1d54206526e5e6838ba6c21b7f2d5c0f829ff5b8e45c879d6d9898b7758bd7f4ce9694f3646932987f6bc8975d39833c160d56fd14cb814500389e936759a60d9c8cb4; my_rd=2; __druidClientInfo=JTdCJTIyY2xpZW50V2lkdGglMjIlM0EyOTglMkMlMjJjbGllbnRIZWlnaHQlMjIlM0E2OTQlMkMlMjJ3aWR0aCUyMiUzQTI5OCUyQyUyMmhlaWdodCUyMiUzQTY5NCUyQyUyMmRldmljZVBpeGVsUmF0aW8lMjIlM0ExJTJDJTIydXNlckFnZW50JTIyJTNBJTIyTW96aWxsYSUyRjUuMCUyMChXaW5kb3dzJTIwTlQlMjAxMC4wJTNCJTIwV2luNjQlM0IlMjB4NjQpJTIwQXBwbGVXZWJLaXQlMkY1MzcuMzYlMjAoS0hUTUwlMkMlMjBsaWtlJTIwR2Vja28pJTIwQ2hyb21lJTJGMTM1LjAuMC4wJTIwU2FmYXJpJTJGNTM3LjM2JTIyJTdE; ttwid=1%7Cz9MBfNt3kEFZxbgaV3T9hZa4q66gUrtTZIybJsneFoQ%7C1745484765%7C3d3e783a20f89d8bd87629b752eafe0b35008b093d34732a18e0b83caa4fc16b; dy_swidth=2560; dy_sheight=1440; is_dash_user=1; SearchMultiColumnLandingAbVer=1; SEARCH_RESULT_LIST_TYPE=%22multi%22; xgplayer_device_id=28490737073; stream_player_status_params=%22%7B%5C%22is_auto_play%5C%22%3A0%2C%5C%22is_full_screen%5C%22%3A0%2C%5C%22is_full_webscreen%5C%22%3A0%2C%5C%22is_mute%5C%22%3A1%2C%5C%22is_speed%5C%22%3A1%2C%5C%22is_visible%5C%22%3A0%7D%22; download_guide=%223%2F20250426%2F1%22; WallpaperGuide=%7B%22showTime%22%3A1745890713662%2C%22closeTime%22%3A0%2C%22showCount%22%3A2%2C%22cursor1%22%3A52%2C%22cursor2%22%3A16%7D; sid_guard=9ad9fd177cc0a4d06b4453efb9b5fa38%7C1746011345%7C5184000%7CSun%2C+29-Jun-2025+11%3A09%3A05+GMT; sid_ucp_v1=1.0.0-KDhhNzhhZWM5NGM1MjFjZWE0ZWRjYThjYWUyNGJjZjYzMWFhODcwNDQKIQiokuC0mYzHBhDRicjABhjvMSAMMNTV5ZgGOAdA9AdIBBoCaGwiIDlhZDlmZDE3N2NjMGE0ZDA2YjQ0NTNlZmI5YjVmYTM4; ssid_ucp_v1=1.0.0-KDhhNzhhZWM5NGM1MjFjZWE0ZWRjYThjYWUyNGJjZjYzMWFhODcwNDQKIQiokuC0mYzHBhDRicjABhjvMSAMMNTV5ZgGOAdA9AdIBBoCaGwiIDlhZDlmZDE3N2NjMGE0ZDA2YjQ0NTNlZmI5YjVmYTM4; volume_info=%7B%22isUserMute%22%3Afalse%2C%22isMute%22%3Atrue%2C%22volume%22%3A0.5%7D; __ac_nonce=06819648b00ec0ce0e034; __ac_signature=_02B4Z6wo00f015oPA5wAAIDDrSvHwMSSW1uaLwcAAI6jb0; csrf_session_id=ed8d2b0fe1b2350860a4b7e72de6f212; publish_badge_show_info=%220%2C0%2C0%2C1746494615402%22; strategyABtestKey=%221746494626.155%22; biz_trace_id=331cc5fb; stream_recommend_feed_params=%22%7B%5C%22cookie_enabled%5C%22%3Atrue%2C%5C%22screen_width%5C%22%3A2560%2C%5C%22screen_height%5C%22%3A1440%2C%5C%22browser_online%5C%22%3Atrue%2C%5C%22cpu_core_num%5C%22%3A12%2C%5C%22device_memory%5C%22%3A8%2C%5C%22downlink%5C%22%3A10%2C%5C%22effective_type%5C%22%3A%5C%224g%5C%22%2C%5C%22round_trip_time%5C%22%3A50%7D%22; passport_fe_beating_status=true; FOLLOW_LIVE_POINT_INFO=%22MS4wLjABAAAAMAzlpTJrgwo1cC5DIJqInKQARhlE8r9mJd5oNobo4uBtqvaUMTcensY0b3ZSBTCK%2F1746547200000%2F0%2F0%2F1746496063744%22; FOLLOW_NUMBER_YELLOW_POINT_INFO=%22MS4wLjABAAAAMAzlpTJrgwo1cC5DIJqInKQARhlE8r9mJd5oNobo4uBtqvaUMTcensY0b3ZSBTCK%2F1746547200000%2F0%2F0%2F1746496663744%22; IsDouyinActive=true; bd_ticket_guard_client_data=eyJiZC10aWNrZXQtZ3VhcmQtdmVyc2lvbiI6MiwiYmQtdGlja2V0LWd1YXJkLWl0ZXJhdGlvbi12ZXJzaW9uIjoxLCJiZC10aWNrZXQtZ3VhcmQtcmVlLXB1YmxpYy1rZXkiOiJCSTVsbDlKdHJSTGJmZS9CZ1BHckR4Z0JyVTh1ZGFvNUdQRmhLeWNuM0lQanRMZDZvY0luRUcxYU40ZDluL0cvVzRhdXlYRm5yQng2ODdJeGNVVXk0N289IiwiYmQtdGlja2V0LWd1YXJkLXdlYi12ZXJzaW9uIjoyfQ%3D%3D; home_can_add_dy_2_desktop=%221%22; odin_tt=4656b36a48bd12c3209d67ef4ddf26fad77967f7a70cf079f794231bca3edfecf940bb24294d8009d5d1a49338b0c4dc0dc238503cb22c456268fc8a0b9ceb36'
headers = {
    'User-Agent':
    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36',
    "Referer": 'https://www.douyin.com/user/MS4wLjABAAAABAqWIVCSL2xpC1ruQ8YsTsyF_hjsA-8_68sXwyXvmZ_YorOlGiVj9_MSRlve9Vf5',
    'cookie': cookie
}

BASE_URL = "https://www.douyin.com/aweme/v1/web/aweme/post/?aid=6383&sec_user_id={user_id}&max_cursor={max_cursor}&count=100"
# DOWN_LOAD_PATH = "E:/PythonCode/douyidown/"
DOWN_LOAD_PATH = "//ttnas/homes/zy0612/douyin_download/"
USER_ID_DICT = {
    #20250506
    # 'chaokeaidelani': 'MS4wLjABAAAABAqWIVCSL2xpC1ruQ8YsTsyF_hjsA-8_68sXwyXvmZ_YorOlGiVj9_MSRlve9Vf5',
    #20250506
    # 'Â∞èÂ¶ñÁ≤æüßö‚Äç‚ôÄÔ∏è': 'MS4wLjABAAAAMn0vkvdlaN0vkG60lMUfP0DtiNdsRZNl1KsRAFI0V-o8ee4FUSVyK_Miq-YCIeML',
    #20250506
    # 'ÁöñÁöñ': 'MS4wLjABAAAAuSiwb7k3ZqFCGYankf7OsZ4I0KYSZugAvf_A9zBrzUU',
    #20250506
    # 'ÈªÑÂ∞è‰æù‰æù': 'MS4wLjABAAAAly2paCVGTLFbzNAl6-VU1UMN0EXUJSNhkAVut3fiFpMLkUFN2sdCJpeIGA-eg3nl',
    #20250506
    # 'Â∞èÊ≥ΩÈÄâÊâã': 'MS4wLjABAAAAm7z6GGMLkqZUK6P8J9o5zroInK1aS_MeCbPK7ed-On5fn8Dp-DB3rfpevAh7bNxP',
    #20250506
    # 'Ëµ§ÂøÉËææÁê≥': 'MS4wLjABAAAAeuiQQCvzqfQ_3iorNsRI7B5KIHnhKDHg3zxmgPLO44hGm7uGinQ7vZTCxCUxwa-w',
    #20250506
    # 'ËèÄËèÄ': 'MS4wLjABAAAAu_HEA2FUfSRdjxFkhXxI7q1SndfEJRKTXeTQWp1itSk',
    #20250506
    # 'ËéâËéâÂ®Ö‚ú®': 'MS4wLjABAAAAMQCwSo2gXbA4z29H30tIhwevWn0hS5Ep9LW8gvY3Wkw',
    #20250506
    # 'Â∞èÂ∏àÂ¶π': 'MS4wLjABAAAAdZ8Sm6D3GGNI95_FQbgrU4wM8uftEf-oQZ0SGBxErmM',
    #20250506 127/604
    # 'F FF': 'MS4wLjABAAAAycZ09Nn8WSmcoMiSC71A0ZrIIYdMdfYgD7NoAavL4CM_VIcC84q612nJgU-Leg5U',
    #20250506 313/399
    # 'Áë∂Áë∂„ÄÇ': 'MS4wLjABAAAA4LaXHazkVOC88zda95RE330H3TyfCtaCQ0RhWttX4Lw',
    #20250506 none
    # 'Ê°É‰∫ÜÊ°É‰∫Ü': 'MS4wLjABAAAAvGmnkhg4L-GwariULtMQr3bt9GjeG21zCnBunFRB0p_e6N3vPUg81F1T8hLMOAHQ',
    #20250506
    # 'Âàù7Èòø': 'MS4wLjABAAAAxvFDE6PnnvMpXTrUbXn-rJKrH4bLv4Aewfy0xGelaqdFzwad2SW0sukiYj8g5W13',
    #20250506
    # 'ÊúàÂàù7': 'MS4wLjABAAAA5adp44GHz_JyY3vIMFdJqKnBonUKDl_B3LSPs7Kb9dsEfWJX-c_7FZnRpc0x8V07',
    #20250506  ????
    # '7iout': 'MS4wLjABAAAAvR8jJKSFXYxFzp702Jv4n-UYTlqk1q7NAer1R4W4SSTc5JBQCMMhBaZ2KtQBiMsS',
    #20250506 144/345
    # '‰∏ë‰∏ëÂàò': 'MS4wLjABAAAA68OGeReuRJQeeoqJhdVISvZoVsAozJCjulb2cEjTT_Tukimnp7c1rG8IhJHjfy-U',
    #20250506
    # 'ËçîÊûùÂÜ∞': 'MS4wLjABAAAARAnCeRCBd8WMVRYzE-peF2iHdR9EqJa7TpLo_dYQS9aQiAt2qLpbtikGii9Mh3wY',
    #20250506 93/277
    # 'ËúúÊ°É‰∏çÂ§üÁîú': 'MS4wLjABAAAAbu9ErYjEWF4Co_m72_JOpXF8EaL68kOY6FqnAtTxVtK13osp0dduhBHdK7pGIXx5',
    #20250506
    # 'Ëî°Âí©Âí©üêë': 'MS4wLjABAAAAE15Bwh8A9HzfvSH2eyzETkSAtu901dEyCGL_3AhbIqCpZWv1LZN_TWXMIihzkn15',
    #20250506
    # 'Ê©òÁå´Âøµ': 'MS4wLjABAAAAwmGUxig2h1dFks46RKSBZpDE-7ddP69AM6wN3qmA5xNjtvy-UaqvqNIeHFN8uFk3',
    #20250506
    # 'Â∞è‰πù': 'MS4wLjABAAAAYJTggrWv7nYSViYeysjAzBQgIC9M69rBvvtGtcT6SSPnHc9gV6m-wPdwpQU9e_c0',
    #20250506
    # 'ËúúËúú‚ôê': 'MS4wLjABAAAAX01nkcEdzfWMmu-pOuBWJeeI4knC_odRyFxDcDd0PEo',
    #20250506
    # 'ÊÑâÂø´': 'MS4wLjABAAAA8nzKhA4Ad7XYtWhIYYvBupKju62SwJJg5Y49ydkltvyfST1mv2l0yEaSDYvjg9Z4',
    #20250506
    # 'Ëä±Èó¥ÈõÜ': 'MS4wLjABAAAAa318vr5_JpDlV7bXxz3A3R9dbNfCDvRW75ik1XYasSA',
    #20250506
    # 'ÈôàÊ¢¶Â©∑': 'MS4wLjABAAAAe-mrBcvNgSlggvZzrK-5Q_BVQYy7dwqoRm9oabKNVIA',
    # 'kttin': 'MS4wLjABAAAAwAwjuhpTHykvlyELpckEuhq6XfgATZHkud2gNrMkdZx0lz75p8P9cyWfBHaUMUPT',
    # 'YeonHwa': 'MS4wLjABAAAANL7JScWfjttBWCG6-HCfXi_bc3n3J4MQgOPbbGtVS6yRvamDeB-MZNTr_upFAo5y',
    #20250506
    # 'ÂßúÂøµÂÆâ‚ú®': 'MS4wLjABAAAArkozwIaK0C-6SQZD4PpFztX1-jP01JFhtzL2rFARKy0',
    #20250506 none
    # 'Ë•øÊüöüéÄ': 'MS4wLjABAAAA49CPethD118u6MgPyvHyqMyJQwLqPvh0peUxrz9sMSY',
    #20250506
    # 'Ë¥¢Á•ûÁà∑ÁöÑÂøÉÂ∞ñÂ∞ñ': 'MS4wLjABAAAAJfKP7w4oR2CktbHsUE26ioULlbiLH6NQoLWierkr-J4',
    #20250506
    # 'Â§©È¶ôË∞∑‚ú®‚ú®': 'MS4wLjABAAAA6haPHE4o8uemgKFLdGbQxs1HzSawO4An1Snpaz00aEajzJH56NoAe7YoVBf3uDMm',
    # 'ÂéüÊù•ÊòØ‰∏ÄÊ¢®ÂëÄ': 'MS4wLjABAAAACXlyu7s6AC9fM50Sw38iKF1gLzSk3PGBCiYjIEVVmsPdwHdQiDlLR0q6ZfdA_AM6',
    # 'Â∞èüêçÁöÑÁîµËΩ¶ËΩ¶': 'MS4wLjABAAAAiBhrRobDriPb3gbAdIEF1jQb3rtvMMaUduxOzqIdkOk',
    #20250506
    # 'CameraMan': 'MS4wLjABAAAAbBVrwZgLgdl5_9DjFt89q-scjxODnB66JUMTF_iFDRs',
    #20250506  250/288
    # 'ÈùôÈùôÂ≠¶Âßê': 'MS4wLjABAAAAP7Z5kBdUE464Tq8LwnoZKmK4FyLu3fgBwteBXkf_n2k4F4HZ2Dy0WssiGPxOK49W',
    # 'ËÉåÂΩ±Â•≥Á•ûÔºàÊ©±Á™óËê•‰∏ö‰∏≠Ôºâ': 'MS4wLjABAAAAQArKjAatCD-025hnBNFTJBFLGiB6e5LUGnWnqZ4bHYY',
    # 'Â•îË∑ëÁöÑÂ∞èË•ø': 'MS4wLjABAAAAVsHnPaYO0nwder9Dqji7GbVDnip-yJQOOGoyNeWN2Hs',
    #20250506
    # 'ÂêÉ‰∏çÈ•±': 'MS4wLjABAAAAbqJK49kFC7__gIKK6RJkpS1g4-AGjiVTHyWFgiCKiDlORMj36_WgqTjXMCh_dLps',
    # '@Ê∏ÖÊ∏ÖÂ≠ê': 'MS4wLjABAAAAmxvlBteS3TleGeuvSdkb8o9GnfAXlx3zs75RI9KU7nxB315Czrf-WvdkEHcbkV3Z',
    # '‰π±Âèñ‰∏Ä‰∏™Âêç': 'MS4wLjABAAAAaUvbvk4TLDDEPlNQ9wI_DzzMhEmhEgjzl-3RPcy8g5M',
    #20250506
    # '- Ê•äÁ©é -': 'MS4wLjABAAAA8bXrjog2b79SuRT0iBW5DcTAFUe2qbvpoA1DIPhKQUo',
    #20250506
    # 'Âë®‰∏Ä.': 'MS4wLjABAAAAjIDrXvWV04P1wcyCi5fIjMOa5Ao2f6KaC3d0lO6I_RgvS0xoJg2dVSQBSSzglzvS',
    #20250506
    # 'Stan': 'MS4wLjABAAAAdKL86CXlh_ir5aW2NXVWreNClZWc9jS_eVfeKuFqHsCP1fDI2j86WgGOLGXygRPR',
    #20250506
    # 'Â§ßC‚òÄÔ∏è': 'MS4wLjABAAAA_cfLBPtF4ZB0cBPX2JjgNxt6HQEk61xQA5s5O0eWM-KZM5NvoT534FTkXxmAJzPU',
    # 'kkÁöÑÈáéËõÆ': 'MS4wLjABAAAACvsBvdLd3HFKfIwCO_dwphqujnCHQz-OQ68JhQ9FqNdlx5GbLk801SzHslaasv94',
    # 20250506
    # '-l': 'MS4wLjABAAAA8iLRX6DxldQCcbIZCJ17tOFqwo7haFJMOFPdqcBpY2c',
    # 20250506
    # 'Â§ßÊÖßÂÑøüíô¬π‚Å∂‚Å∏': 'MS4wLjABAAAA5vdGeE-2gOLx2ml8lV3y1RHGngO4lwNfGZZV6fM7AcC_OU4J6j6dX-pX022Lbvnv',
    # 'ËèÄËèÄ': '',
    # 'ËèÄËèÄ': '',
    # 'ËèÄËèÄ': '',
    # 'ËèÄËèÄ': '',
}


def write_into_file(path, target_content):
    """
    Â∞ÜÊåáÂÆöÂÜÖÂÆπÂÜôÂÖ•Êñá‰ª∂„ÄÇ

    ËØ•ÂáΩÊï∞Ë¥üË¥£ÊâìÂºÄ‰∏Ä‰∏™Êñá‰ª∂ÔºåÂ∞ÜÂÖ∂ÂÜÖÂÆπÊ∏ÖÁ©∫ÔºåÂπ∂ÂÜôÂÖ•Êñ∞ÁöÑ‰∫åËøõÂà∂ÂÜÖÂÆπ„ÄÇ

    ÂèÇÊï∞:
    - path: Ë¶ÅÂÜôÂÖ•ÁöÑÊñá‰ª∂Ë∑ØÂæÑ„ÄÇËøôÂ∫îËØ•ÊòØ‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ÔºåË°®Á§∫Êñá‰ª∂ÁöÑË∑ØÂæÑ„ÄÇ
    - target_content: Ë¶ÅÂÜôÂÖ•Êñá‰ª∂ÁöÑÂÜÖÂÆπ„ÄÇËøôÂ∫îËØ•ÊòØ‰∏Ä‰∏™‰∫åËøõÂà∂Â≠óÁ¨¶‰∏≤„ÄÇ

    ËøîÂõûÂÄº:
    ËØ•ÂáΩÊï∞Ê≤°ÊúâËøîÂõûÂÄº„ÄÇÂÆÉ‰ªÖÊâßË°åÂÜôÂÖ•Êìç‰Ωú„ÄÇ
    """
    # ÊâìÂºÄÊñá‰ª∂‰ª•ËøõË°å‰∫åËøõÂà∂ÂÜôÂÖ•
    with open(path, 'wb') as write_file:
        # Â∞ÜÁõÆÊ†áÂÜÖÂÆπÂÜôÂÖ•Êñá‰ª∂
        write_file.write(target_content)


def merged_list_write(merged_list):
    """
    Â∞ÜÂêàÂπ∂ÂêéÁöÑÂàóË°®ÂÜôÂÖ•Êñá‰ª∂„ÄÇ

    ÂèÇÊï∞:
    merged_list (list): ÈúÄË¶ÅÂÜôÂÖ•Êñá‰ª∂ÁöÑÂàóË°®„ÄÇ

    ËØ•ÂáΩÊï∞ÊâìÂºÄ‰∫Ü‰∏Ä‰∏™Âêç‰∏∫'mergedlist'ÁöÑÊñá‰ª∂ÔºåÂπ∂Â∞ÜÂàóË°®‰∏≠ÁöÑÊØè‰∏™ÂÖÉÁ¥†ÂÜôÂÖ•Êñá‰ª∂Ôºå
    ÊØè‰∏™ÂÖÉÁ¥†Âç†‰∏ÄË°å„ÄÇÂ¶ÇÊûúÊñá‰ª∂Â∑≤Â≠òÂú®ÔºåÂÖ∂ÂÜÖÂÆπÂ∞ÜË¢´Ê∏ÖÁ©∫Âπ∂ÈáçÊñ∞ÂÜôÂÖ•Êñ∞ÁöÑÂàóË°®ÂÜÖÂÆπ„ÄÇ
    Â¶ÇÊûúÂàóË°®‰∏≠ÁöÑÂÖÉÁ¥†‰∏çÊòØÂ≠óÁ¨¶‰∏≤Á±ªÂûãÔºåÂ∞ÜË¢´ËΩ¨Êç¢‰∏∫Â≠óÁ¨¶‰∏≤Á±ªÂûãÂêéÂÜôÂÖ•„ÄÇ
    """
    with open('mergedlist', 'a', encoding='UTF-8') as f:
        for i in merged_list:
            f.write(str(i))
            f.write('\n')
        f.close()


def check_video_uniq(video_name, video_name_list):
    """
    Ê£ÄÊü•ËßÜÈ¢ëÂîØ‰∏ÄÊÄß
    
    Ê≠§ÂáΩÊï∞Áî®‰∫éÂà§Êñ≠‰∏Ä‰∏™ËßÜÈ¢ëÂêçÁß∞ÊòØÂê¶‰∏çÂú®ÁªôÂÆöÁöÑËßÜÈ¢ëÂêçÁß∞ÂàóË°®‰∏≠Ôºå‰ªéËÄåÁ°Æ‰øùËßÜÈ¢ëÁöÑÂîØ‰∏ÄÊÄß
    
    ÂèÇÊï∞:
    video_name (str): ÂæÖÊ£ÄÊü•ÁöÑËßÜÈ¢ëÂêçÁß∞
    video_name_list (list): ËßÜÈ¢ëÂêçÁß∞ÂàóË°®ÔºåÁî®‰∫éÊØîËæÉ
    
    ËøîÂõû:
    bool: Â¶ÇÊûúËßÜÈ¢ëÂêçÁß∞‰∏çÂú®ÂàóË°®‰∏≠ÔºåÂàôËøîÂõûTrueÔºåË°®Á§∫ËØ•ËßÜÈ¢ëÊòØÂîØ‰∏ÄÁöÑÔºõÂê¶ÂàôËøîÂõûFalse
    """
    # Ê£ÄÊü•ËßÜÈ¢ëÂêçÁß∞ÊòØÂê¶Âú®ÂàóË°®‰∏≠
    if video_name not in video_name_list:
        # Â¶ÇÊûú‰∏çÂú®ÂàóË°®‰∏≠ÔºåËøîÂõûTrue
        return True


def get_video_list_merged(USER_ID_DICT):
    """
    ÂêàÂπ∂Â§ö‰∏™Áî®Êà∑ÁöÑËßÜÈ¢ëÂàóË°®Âπ∂ËøîÂõû„ÄÇ

    ÈÅçÂéÜÁî®Êà∑IDÂ≠óÂÖ∏ÔºåË∞ÉÁî®ÊØè‰∏™Áî®Êà∑ÁöÑËßÜÈ¢ëÂàóË°®Ëé∑ÂèñÂáΩÊï∞ÔºåÂ∞ÜÊâÄÊúâËßÜÈ¢ë‰ø°ÊÅØÂêàÂπ∂Êàê‰∏Ä‰∏™Â§ßÂàóË°®„ÄÇ
    ËØ•ÂàóË°®‰∏ç‰ªÖÂåÖÂê´ËßÜÈ¢ëIDÔºåËøòÊúâÂÖ∂‰ªñÁõ∏ÂÖ≥‰ø°ÊÅØÔºåÊúÄÂêéÂ∞ÜËøô‰∏™ÂêàÂπ∂ÂêéÁöÑÂàóË°®ÂÜôÂÖ•Êñá‰ª∂„ÄÇ

    ÂèÇÊï∞:
    USER_ID_DICT (dict): ÂåÖÂê´Â§ö‰∏™Áî®Êà∑IDÁöÑÂ≠óÂÖ∏„ÄÇ

    ËøîÂõû:
    list: ÂêàÂπ∂ÂêéÁöÑËßÜÈ¢ëÂàóË°®„ÄÇ
    """
    # ÂàùÂßãÂåñ‰∏Ä‰∏™Á©∫ÂàóË°®ÔºåÁî®‰∫éÂ≠òÂÇ®ÊâÄÊúâËßÜÈ¢ë‰ø°ÊÅØ
    merged_list = []
    # ÈÅçÂéÜÁî®Êà∑IDÂ≠óÂÖ∏ÔºåËé∑ÂèñÊØè‰∏™Áî®Êà∑ÁöÑËßÜÈ¢ëÂàóË°®
    for user_id in USER_ID_DICT.values():
        # Ë∞ÉÁî®Ëé∑ÂèñÂçï‰∏™Áî®Êà∑ËßÜÈ¢ëÂàóË°®ÁöÑÂáΩÊï∞ÔºåÂ∞ÜÁªìÊûúÊ∑ªÂä†Âà∞ÂêàÂπ∂ÂàóË°®‰∏≠
        get_video_list_user(user_id, merged_list, has_more=1, max_cursor=0)
    # Â∞ÜÂêàÂπ∂ÂêéÁöÑËßÜÈ¢ëÂàóË°®ÂÜôÂÖ•Êñá‰ª∂
    merged_list_write(merged_list)
    # ËøîÂõûÂêàÂπ∂ÂêéÁöÑËßÜÈ¢ëÂàóË°®
    return merged_list


def get_video_list_user(user_id, merged_list, has_more=1, max_cursor=0):
    """
    Ê†πÊçÆÁî®Êà∑IDËé∑ÂèñËßÜÈ¢ëÂàóË°®ÔºåÂπ∂Â∞ÜÁªìÊûúÂêàÂπ∂Âà∞‰∏Ä‰∏™ÂàóË°®‰∏≠„ÄÇ
    
    ÂèÇÊï∞:
    user_id (str): Áî®Êà∑ID„ÄÇ
    merged_list (list): Áî®‰∫éÂ≠òÂÇ®ÂêàÂπ∂ÂêéËßÜÈ¢ë‰ø°ÊÅØÁöÑÂàóË°®„ÄÇ
    has_more (int): ÊòØÂê¶ÊúâÊõ¥Â§öËßÜÈ¢ëÔºå1Ë°®Á§∫ÊúâÔºå0Ë°®Á§∫Ê≤°Êúâ„ÄÇÈªòËÆ§‰∏∫1„ÄÇ
    max_cursor (int): Áî®‰∫éÂàÜÈ°µÁöÑÊ∏∏Ê†á„ÄÇÈªòËÆ§‰∏∫0„ÄÇ
    
    ËøîÂõû:
    Êó†ËøîÂõûÂÄºÔºå‰ΩÜ‰ºöÂ∞ÜËé∑ÂèñÁöÑËßÜÈ¢ë‰ø°ÊÅØÊ∑ªÂä†Âà∞merged_list‰∏≠„ÄÇ
    """
    # Ê†πÊçÆÁî®Êà∑IDÂíåÊ∏∏Ê†áÊ†ºÂºèÂåñURL
    url = BASE_URL.format(user_id=user_id, max_cursor=max_cursor)
    print(url)
    # Á°Æ‰øùËØ∑Ê±Ç‰πãÈó¥ÊúâË∂≥Â§üÁöÑÂª∂ËøüÔºåÈÅøÂÖçËøá‰∫éÈ¢ëÁπÅ
    time.sleep(1)
    # ÂèëËµ∑HTTPËØ∑Ê±ÇËé∑ÂèñËßÜÈ¢ëÂàóË°®Êï∞ÊçÆ
    r = requests.get(url, headers=headers)
    # Ëß£ÊûêÂìçÂ∫îÂÜÖÂÆπ‰∏∫JSONÊ†ºÂºè
    resp = json.loads(r.content)
    # ÈÅçÂéÜËßÜÈ¢ëÂàóË°®‰∏≠ÁöÑÊØè‰∏™ËßÜÈ¢ëÈ°π
    for item in resp['aweme_list']:
        # Ëé∑ÂèñËßÜÈ¢ëURLÔºåÁ±ªÂûã‰∏∫str
        video_url: str = item['video']['play_addr']['url_list'][0]
        # Ëé∑ÂèñËßÜÈ¢ë‰ΩúËÄÖIDÔºåÁ±ªÂûã‰∏∫str
        video_author_id: str = item['author']['uid']
        # Ëé∑ÂèñËßÜÈ¢ë‰ΩúËÄÖÊòµÁß∞ÔºåÁ±ªÂûã‰∏∫str
        video_author_name: str = item['author']['nickname']
        # Ëé∑ÂèñÂπ∂Â§ÑÁêÜËßÜÈ¢ëÂêçÁß∞ÔºåÁ±ªÂûã‰∏∫str
        video_name: str = re.sub(r'[ :#@/\n\*?‚Äú„Ää„Äã><]', '', item['desc'])
        # Â¶ÇÊûúËßÜÈ¢ëÂêçÁß∞‰∏∫Á©∫ÔºåÂàôËÆæÁΩÆ‰∏∫ÈªòËÆ§ÂÄº
        if len(video_name) == 0:
            video_name = 'Êó†ÂêçÁß∞'
        # Ëé∑ÂèñËßÜÈ¢ëÂàõÂª∫Êó∂Èó¥ÔºåÂπ∂Ê†ºÂºèÂåñ‰∏∫Â≠óÁ¨¶‰∏≤ÔºåÁ±ªÂûã‰∏∫str
        video_create_time: str = time.strftime("%Y-%m-%d_%H_%M_%S", time.localtime(item['create_time']))
        if item['images']:
            for image in item['images']:
                image_url: str = image['url_list'][0]
                image_name: str = video_name + '_' + str(item['images'].index(image))
                one_image_info_list = ['image', video_author_id, video_author_name, video_create_time, image_name, image_url]
                print(one_image_info_list)
                merged_list.append(one_image_info_list)
        else:
            # ÊûÑÂª∫Âçï‰∏™ËßÜÈ¢ë‰ø°ÊÅØÂàóË°®
            one_video_info_list = ['video', video_author_id, video_author_name, video_create_time, video_name, video_url]
            print(one_video_info_list)
            # Â∞ÜÂçï‰∏™ËßÜÈ¢ë‰ø°ÊÅØÊ∑ªÂä†Âà∞ÂêàÂπ∂ÂàóË°®‰∏≠
            merged_list.append(one_video_info_list)
    # Êõ¥Êñ∞ÊòØÂê¶ÊúâÊõ¥Â§öËßÜÈ¢ëÂíåÊ∏∏Ê†áÂÄº
    has_more = resp['has_more']
    max_cursor = resp['max_cursor']
    # Â¶ÇÊûúËøòÊúâÊõ¥Â§öËßÜÈ¢ëÔºåÂàôÈÄíÂΩíË∞ÉÁî®Ëá™Ë∫´ÁªßÁª≠Ëé∑Âèñ
    if has_more == 1:
        get_video_list_user(user_id, merged_list, has_more, max_cursor)


def get_video(USER_ID_DICT):
    """
    Ëé∑ÂèñËßÜÈ¢ëÂáΩÊï∞

    ÂèÇÊï∞:
        Êó†

    ËøîÂõûÂÄº:
        Êó†
    """
    # Ëé∑Âèñ‰∏ãËΩΩË∑ØÂæÑ‰∏ãÁöÑÊñá‰ª∂ÂêçÂàóË°®ÔºåÁ±ªÂûã‰∏∫List[str]
    video_name_list: List[str] = os.listdir(DOWN_LOAD_PATH)
    merged_list = get_video_list_merged(USER_ID_DICT)

    bar: tqdm = tqdm(merged_list, dynamic_ncols=True)
    for item in bar:
        # ÁªÑÂêàËßÜÈ¢ëÊñá‰ª∂ÂêçÔºåÁ±ªÂûã‰∏∫str
        if item[0] == 'video':
            total_video_name: str = str(item[1] + '_' + item[2] + '_' + item[3] + '_' + item[4]) + '.mp4'
        else:
            total_video_name: str = str(item[1] + '_' + item[2] + '_' + item[3] + '_' + item[4]) + '.webp'
        if check_video_uniq(total_video_name, video_name_list):  # Ê£ÄÊü•ËßÜÈ¢ëÊñá‰ª∂ÂêçÊòØÂê¶ÂîØ‰∏Ä
            # ‰ΩøÁî®requestsËé∑ÂèñËßÜÈ¢ëÂÜÖÂÆπÔºåÁ±ªÂûã‰∏∫bytes
            video: bytes = requests.get(url=item[5], headers=headers, stream=True).content
            # print(requests.get(url=item[4], headers=headers, stream=True).raise_for_status(), item[4])
            # Â∞ÜËßÜÈ¢ëÂÜÖÂÆπÂÜôÂÖ•Êñá‰ª∂
            write_into_file(DOWN_LOAD_PATH + total_video_name, video)
            # ËÆæÁΩÆËøõÂ∫¶Êù°ÁöÑÊèèËø∞‰∏∫ËßÜÈ¢ëÊñá‰ª∂ÂêçÂëΩ‰∏≠
            bar.set_description(f'{total_video_name}ÂëΩ‰∏≠')
            # ÂèØÈÄâÁöÑËÆæÁΩÆËøõÂ∫¶Êù°ÂêéÁºÄ‰∏∫ËßÜÈ¢ëÊñá‰ª∂ÂêçÂëΩ‰∏≠
            # bar.set_postfix(total_video_name=f'{total_video_name}ÂëΩ‰∏≠')
            # Âª∂Êó∂1Áßí
            time.sleep(1)
        else:
            # ËÆæÁΩÆËøõÂ∫¶Êù°ÁöÑÊèèËø∞‰∏∫ËßÜÈ¢ëÊñá‰ª∂ÂêçÂ∑≤Â≠òÂú®
            bar.set_description(f'{total_video_name}Â∑≤Â≠òÂú®')
            continue
            # ÂèØÈÄâÁöÑËÆæÁΩÆËøõÂ∫¶Êù°ÂêéÁºÄ‰∏∫ËßÜÈ¢ëÊñá‰ª∂ÂêçÂ∑≤Â≠òÂú®
            # bar.set_postfix(total_video_name=f'{total_video_name}Â∑≤Â≠òÂú®')


def main():

    get_video(USER_ID_DICT)


if __name__ == '__main__':
    main()
