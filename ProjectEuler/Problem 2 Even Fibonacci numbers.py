# Each new term in the Fibonacci sequence is generated by adding the
# previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed 
# four million, find the sum of the even-valued terms.

a = 1
b = 2
reuslt = 0
while b < 4000000:
	a, b = b, a+b
	if a % 2 == 0:
		reuslt += a
print reuslt		



# Problem - 2

# Even Fibonacci numbers

# def even_fib_num(limit):
# 	'''Finds the sum of the even Fibonacci
# 	numbers below limit'''
# 	fib1, fib2, fib3 = 1, 1, 0
# 	sum = 0
# 	while fib3 < limit:
# 		fib3 = fib2 + fib1
# 		if fib3 % 2 == 0:
# 			sum += fib3
# 		fib1 = fib2
# 		fib2 = fib3
# 	return sum

# print even_fib_num(4000000)




# a=1
# b=2
# s=[1]

# while b<4000000:
#     a,b=b,a+b
#     s.append(a)

# print sum([i for i in s if i%2 == 0])

